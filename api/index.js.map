{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/jordanwalsh/personalprojects/lv8r-2/app/root.tsx", "../app/components/Foundation.tsx", "../app/components/NavBar.tsx", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/dashboard/$user/index.tsx", "../app/services/auth.server.ts", "../app/services/dbClient.ts", "../app/utilities/getUserInfo.ts", "../app/components/info/Stats.tsx", "../app/components/buttons/OpenButton.tsx", "../app/components/info/QuickProfile.tsx", "../app/components/info/AvatarCurrent.tsx", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/register/$id/index.tsx", "../app/utilities/createUser.ts", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/dashboard/index.tsx", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/register/index.tsx", "../app/utilities/register.ts", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/logout.tsx", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/index.tsx", "/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLocation,\n} from \"@remix-run/react\";\nimport type { LazyFeatureBundle } from \"framer-motion/types/components/LazyMotion/types\";\nimport { m, AnimatePresence, LazyMotion } from \"framer-motion\";\nimport Foundation from \"./components/Foundation\";\nimport NavBar from \"./components/NavBar\";\nimport styles from \"./styles/app.css\";\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <NavBar />\n        <Foundation>\n\n            \n                <Outlet />\n\n        </Foundation>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import React from 'react'\n//Accept React.FC + React elements as valid props\ntype Props = {\n    children?: React.FunctionComponent | React.ReactElement \n}\n\nconst Foundation:React.FC<Props> =  ({children}: Props) => {\n  return (\n    //TODO: Adjust height from 90vh to screen minus nav.\n    <div className=\"flex flex-grow w-screen h-[calc(100vh_-_4rem)] items-center justify-center bg-gradient-to-r from-base-100 to-neutral\" >\n        {children}\n    </div>\n  )\n}\n\nexport default Foundation\n\n", "import React from \"react\";\nimport { Link, useNavigate } from \"@remix-run/react\";\nimport { authenticator } from \"~/services/auth.server\";\nimport { redirect } from \"@remix-run/node\";\n\ntype Props = {};\n\nfunction NavBar({}: Props) {\n  return (\n    <div>\n      <div className=\"navbar bg-base-100 border-zinc-400 shadow-lg \">\n        <div className=\"navbar-start\">\n          <div className=\"dropdown\">\n            <label tabIndex={0} className=\"btn btn-ghost lg:hidden\">\n              <svg\n                width={35}\n                height={36}\n                viewBox=\"0 0 35 36\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <rect width={35} height={36} fill=\"none\" />\n                <circle\n                  cx={18}\n                  cy={19}\n                  r=\"13.5\"\n                  stroke=\"white\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M11 16L18.2414 25L26 16\"\n                  stroke=\"white\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </label>\n            <ul\n              tabIndex={0}\n              className=\"menu menu-compact text-primary dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\"\n            >\n              <li>\n                <Link to=\"/dashboard/$user/lv8r/0\">LV8R:RIDE</Link>\n              </li>\n              <li tabIndex={0}>\n                <a className=\"justify-between\">\n                  Pitch\n                  <svg\n                    className=\"fill-current\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\n                  </svg>\n                </a>\n                <ul className=\"p-2 z-50\">\n                  <li>\n                    <Link to=\"\">Make</Link>\n                  </li>\n                  <li>\n                    <Link to=\"\">Delete</Link>\n                  </li>\n                </ul>\n              </li>\n              <li>\n                <Link to=\"/logout\">Logout</Link>\n              </li>\n            </ul>\n          </div>\n          <Link to=\"/\">\n            <div className=\"btn btn-ghost normal-case text-2xl\">LV8R</div>\n          </Link>\n        </div>\n        <div className=\"navbar-center hidden lg:flex\">\n          <ul className=\"menu menu-horizontal p-0\">\n            <li>\n              <a>Item 1</a>\n            </li>\n            <li tabIndex={0}>\n              <a>\n                Pitch\n                <svg\n                  className=\"fill-current\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" />\n                </svg>\n              </a>\n              <ul className=\"p-2 z-30 glass bg-base-100 hover:bg-base-00 \">\n                <li>\n                  <a>Make</a>\n                </li>\n                <li>\n                  <a>Edit</a>\n                </li>\n              </ul>\n            </li>\n            <li>\n              <a></a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"navbar-end\">\n          {/*     <a className=\"btn\">User Avatar</a> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n", "import React, { ReactEventHandler } from \"react\";\nimport {\n  Form,\n  Link,\n  Outlet,\n  useActionData,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { authenticator, supabaseStrategy } from \"~/services/auth.server\";\nimport { getUser } from \"~/utilities/getUserInfo\";\nimport type { UserObj } from \"~/interfaces\";\nimport Stats from \"~/components/info/Stats\";\nimport OpenButton from \"~/components/buttons/OpenButton\";\nimport QuickProfile from \"~/components/info/QuickProfile\";\nimport { domAnimation, LazyMotion, m } from \"framer-motion\";\n\n\n\n//Loader:\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  //\n  let paramsUsername: string | undefined = await params.user;\n  //Check session, if session exists refresh token and return session object\n  const session = await supabaseStrategy.checkSession(request);\n\n  //Redirect to homepage, user is not authenticated & session does not exist\n  if (!session) {\n    console.log(\"TODO: error: Your session has expired. Please log in.\");\n    return redirect(\"/\");\n  }\n  //get User from db, to have access to username, pitchId, cardId, etc.\n  if (paramsUsername && session) {\n    let userObject: UserObj | void = await getUser(paramsUsername);\n    return userObject;\n  } else return console.error();\n};\n\n//TODO: Interface for user from sessions, pass props to routes to prefetch data\ntype Props = {};\n\nfunction UserIndex({}: Props) {\n  //TODO: type declarations\n  const currentUser: UserObj = useLoaderData();\n\n  const handleClick: ReactEventHandler = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    alert(\"javascript still working\");\n  };\n  //TODO: Dashboard UI\n  return (\n    <div className=\"flex flex-col border-black border-3 gap-3\">\n      <QuickProfile currentUser={currentUser} />\n      <section className=\"card bg-base-100 w-[80vw] h-[50vh] flex flex-col justify-around shadow-md shadow-orange\">\n        {/*  <div className=\"btn btn-outline w-16 shadow-md bg-base-100 shadow-base-500\">Edit</div> */}\n        <p className=\"text sm:text-xl md:text-3xl text-center text-primary \">\n          You have no notifications\n        </p>\n        {/*   <div className=\"flex w-full\">\n  <div className=\"grid h-20 flex-grow card bg-base-300 rounded-box place-items-center\">content</div>\n  <div className=\"divider divider-horizontal\">LV8R</div>\n  <div className=\"grid h-20 flex-grow card bg-white rounded-box place-items-center\">content</div>\n</div> */}\n        <section key=\"dashActions\" className=\"flex flex-row justify-around\">\n          <LazyMotion features={domAnimation}>\n            <m.div whileHover={{ scale: 1.2 }}>\n              <OpenButton color=\"none\" />\n            </m.div>\n          </LazyMotion>\n        </section>\n      </section>\n      <Stats />\n    </div>\n  );\n}\n\nexport default UserIndex;\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\nimport { Authenticator, AuthorizationError } from \"remix-auth\";\nimport { SupabaseStrategy } from \"remix-auth-supabase\";\nimport { dbClient } from \"./dbClient\";\nimport type { Session } from \"@supabase/supabase-js\";\n//TODO: verify the below import can be deleted.\nimport { SupabaseClient } from \"@supabase/supabase-js\";\n\n//define supabaseClient as our instance created via createClient\n//TODO: Check if there's any added value to changing the sb auth strategy to do this, create supabaseClient interface and refactor SupabaseStrategy to take instance of createClient as first arg, perhaps with optional URL? Option one: pass an imported client instance,\nexport const supabaseClient = dbClient;\n\n//create sessionStorage cookie, current values = remix example. DEV ONLY!\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"sb\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [\"s3cr3t\"], // This should be an env variable\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nexport const supabaseStrategy = new SupabaseStrategy(\n  {\n    supabaseClient,\n    sessionStorage,\n    sessionKey: \"sb:session\", // if not set, default is sb:session\n    sessionErrorKey: \"sb:error\", // if not set, default is sb:error\n  },\n  // signIn -> auth -> return session object\n  async ({ req, supabaseClient }) => {\n    const form = await req.formData();\n    const email = form?.get(\"email\");\n    const password = form?.get(\"password\");\n    //auth example form validation\n    if (!email) throw new AuthorizationError(\"Email is required\");\n    if (typeof email !== \"string\")\n      throw new AuthorizationError(\"Email must be a string\");\n\n    if (!password) throw new AuthorizationError(\"Password is required\");\n    if (typeof password !== \"string\")\n      throw new AuthorizationError(\"Password must be a string\");\n\n    return supabaseClient.auth.api\n      .signInWithEmail(email, password)\n      .then(({ data, error }): Session => {\n        if (error || !data) {\n          throw new AuthorizationError(\n            error?.message ?? \"No user session found\"\n          );\n        }\n\n        return data;\n      });\n  }\n);\n//updated authenticator instance synchronizes return from authenticate method with session object, works with checkSession.\nexport const authenticator = new Authenticator<Session>(sessionStorage, {\n  sessionKey: supabaseStrategy.sessionKey, // keep in sync\n  sessionErrorKey: supabaseStrategy.sessionErrorKey, // keep in sync\n});\n\nauthenticator.use(supabaseStrategy);\n", "import { createClient } from '@supabase/supabase-js'\nconst sbURL = `${process.env.SUPABASE_URL}`\nconst sbKey = `${process.env.SUPABASE_KEY}`\n\n\n//instantiate a client for supabase db\nexport const dbClient = createClient(sbURL, sbKey)", "import { isErrorResponse } from \"@remix-run/react/data\";\nimport { UserObj } from \"~/interfaces\";\nimport { dbClient } from \"~/services/dbClient\";\n\nexport const getUsername = async (userId: string) => {\n  let idArg = userId;\n\n  //get User's username where email returned from authenticator matches User's email.\n  let { data, error } = await dbClient\n    .from(\"Users\")\n    .select(\"username\")\n    .match({ owner: idArg });\n\n  console.log(data?.[0].username);\n  //if error TODO: throw authorizationError\n  if (error) return console.log(error);\n  //if data return data\n  if (data) return data[0].username;\n};\n\nexport const getUser = async (paramsUsername: string | undefined) => {\n  let user: UserObj;\n  if (paramsUsername) {\n    let usernameFromLoader: string = paramsUsername;\n    console.log(usernameFromLoader);\n    //get User's username where email returned from authenticator matches User's email.\n    let { data, error } = await dbClient\n      .from(\"Users\")\n      .select(\n        \"id, username, category, bio, pitch, encountered_pitches, received_cards, sent_cards, owner\"\n      )\n      .match({ username: `${usernameFromLoader}` });\n\n    user = data?.[0];\n    console.log(user);\n    //if error TODO: throw authorizationError\n    if (error) return console.log(error);\n    //if data return data\n    if (data) return user;\n  } else throw Error;\n};\n", "import React from \"react\";\n\ntype Props = {};\n\nexport function Stats() {\n  return (\n    <div className=\"stats sm:stats-horizontal\">\n      <div className=\"stat\">\n        <div className=\"stat-title\">Likes</div>\n        <div className=\"stat-value\">93</div>\n      </div>\n      <div className=\"stat\">\n        <div className=\"stat-title\">Dislikes</div>\n        <div className=\"stat-value\">17</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;\n", "import React from 'react'\n\ntype Props = {\n    color: string\n}\n\nfunction OpenButton({color}: Props) {\n\n  return (\n    <button className='btn  btn-circle'>\n        <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2.14532 18.8226L12.8606 27.9277C13.836 28.7566 15.3368 28.0579 15.3332 26.7766L15.282 8.46326C15.2784 7.18197 13.7737 6.49777 12.803 7.336L2.13894 16.5442C1.44172 17.1462 1.44474 18.2273 2.14532 18.8226Z\" fill=\"black\" stroke=\"black\"/>\n<path d=\"M33.8547 18.8226L23.1394 27.9277C22.164 28.7566 20.6632 28.0579 20.6668 26.7766L20.718 8.46326C20.7216 7.18197 22.2263 6.49777 23.197 7.336L33.8611 16.5442C34.5583 17.1462 34.5553 18.2273 33.8547 18.8226Z\" fill=\"black\" stroke=\"black\"/>\n<rect x=\"17\" y=\"5.60713\" width=\"2\" height=\"24\" rx=\"1\" fill=\"black\"/>\n</svg>\n\n    </button>\n  )\n}\n\nexport default OpenButton", "import React from \"react\";\nimport { UserObj } from \"~/interfaces\";\nimport Avatar from \"./AvatarCurrent\";\n\ntype Props = {\n  currentUser: UserObj;\n};\n\nfunction QuickProfile({ currentUser }: Props) {\n  return (\n    <div className=\"card bg-base-100 text-primary-content max-w-[80vw] m-1 flex flex-row\">\n      <section className=\"flex flex-col\">\n        <Avatar image={\"ope\"} username={currentUser.username} />\n        <p key=\"username\" className=\"text text-xl text-primary pl-2\">\n          {currentUser.username}\n        </p>\n      </section>\n      <section className=\"flex flex-row\">\n        <p className=\"text text-sm sm:hidden md:inline text-primary text-center pt-2 mx-2\">\n          {currentUser.bio}\n        </p>\n        <div className=\"card-actions justify-end content-end\">\n          <button className=\"btn btn-base\">ShowProfile</button>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default QuickProfile;\n", "type Props = {\n    image: string,\n    username: string\n\n}\n\nfunction Avatar({image, username}: Props) {\nlet placeholder = username.charAt(0).concat(username.charAt(1))\n\n\n\n  return (\n <div className=\"object-center pl-2 pt-2\">\n    {image.length >= 5 ?\n    <div className=\"avatar\">\n     <img src={image} alt=\"user\"/> \n     </div>\n     :\n    <div className=\"avatar placeholder\">\n       <div className=\"bg-neutral-focus text-neutral-content rounded-full w-16 \">\n         <span className=\"text-xl\">{placeholder}</span>\n         </div>\n         </div>\n         }\n</div>\n\n\n  )\n}\n\nexport default Avatar", "import { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport React from \"react\";\nimport { supabaseStrategy } from \"~/services/auth.server\";\nimport { createUser } from \"~/utilities/createUser\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const session = await supabaseStrategy.checkSession(request);\n  if (!session) {\n    console.log(\"TODO: Handle this error\");\n  } else console.log(session);\n  return params.id;\n};\n\n//TODO: Determine proper typing of formData, and return from createUser\nexport const action: ActionFunction = async ({ request }) => {\n  const form: any = await request.clone().formData();\n  let data: any | null = await createUser({ form });\n  console.log(data.data[0].username);\n  let username = data.data[0].username;\n  return redirect(`/dashboard/${username}`);\n};\ntype Props = {};\n\nfunction RegisterUsername({}: /* params */ Props) {\n  const paramId: string = useLoaderData();\n\n  return (\n    <div className=\"card w-96 bg-neutral \">\n      <div className=\"card-body flex-col justify-stretch content-around space-y-3 \">\n        <p className=\"text-xl\"> Create profile.</p>\n        <Form method=\"post\" encType=\"multipart/form-data\">\n          <input type=\"hidden\" name=\"id\" value={paramId} />\n\n          <div className=\"container flex-col place-content-evenly  p-2 space-y-2\">\n            <div className=\"container place-content-stretch\">\n              <span>Username</span>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Your username\"\n                className=\"input input-bordered\"\n              />\n            </div>\n\n            <div>\n              <label className=\"input-group input-group-vertical\">\n                <span>Bio</span>\n                <textarea\n                  className=\"textarea textarea-accent\"\n                  placeholder=\"Short bio\"\n                  maxLength={200}\n                  name=\"bio\"\n                ></textarea>\n              </label>\n            </div>\n            <div className=\"form-control card bg-black \">\n              <label className=\"cursor-pointer label flex-row justify-around gap-2\">\n                <span className=\"label-text text-neutral text-lg\">\n                  Have a project?\n                </span>\n                <input\n                  type=\"checkbox\"\n                  name=\"category\"\n                  value=\"maker\"\n                  defaultChecked={false}\n                  className=\"checkbox checkbox-primary shadow-lg\"\n                />\n              </label>\n            </div>\n            <div className=\"container flex-col justify-end\">\n              <button className=\"btn btn-outline btn-primary\">Submit</button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterUsername;\n", "import { dbClient } from \"~/services/dbClient\";\n\nexport const createUser = async ({ form }) => {\n  //Values from formData\n  let id: string = form.get(\"id\");\n  let username: string = form.get(\"username\");\n  let bio: string = form.get(\"bio\");\n  let category: string | null = await form.get(\"category\")\n  //init variable newUser which will be updated with return from db insert operation\n  let newUser\n  \n  //Create new user with foreign key relation to \"owner\" in sb auth table\n  //if checkbox was checked and value is in form, insert new row into User table\n  if (category !== null ) {\n  newUser = await dbClient.from(\"Users\").insert([\n    {\n      username: `${username}`,\n      bio: `${bio}`,\n      owner: `${id}`,\n      category: `${category}`\n    },\n  ]);\n} \n//if checkbox was not checked, omit category from insert operation\nif (!category) {\n  newUser = await dbClient.from(\"Users\").insert([\n    {\n      username: `${username}`,\n      bio: `${bio}`,\n      owner: `${id}`,\n    },\n  ]);\n}\n\n  console.log(newUser);\n  //return data from insert into db\n  return newUser;\n};\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport React from \"react\";\nimport { supabaseStrategy } from \"~/services/auth.server\";\nimport { getUsername } from \"~/utilities/getUserInfo\";\n\n//Check session and if session exists, get username from db-Users where owner id matches Auth User id, pass result as slug\nexport const loader: LoaderFunction = async ({ request }) => {\n  let sessionData: any = await supabaseStrategy.checkSession(request);\n  if (sessionData !== undefined) {\n    let username: string = await getUsername(sessionData.user.id);\n    return redirect(`/dashboard/${username}`);\n  } else return sessionData;\n};\nfunction index() {\n  return (\n    <div className=\"hidden\">\n      <div className=\"text-primary text-3xl\">\n        We're making sure everything is alright.\n      </div>\n    </div>\n  );\n}\n\nexport default index;\n", "import { Form, Link } from \"@remix-run/react\";\nimport React, { FieldsetHTMLAttributes } from \"react\";\nimport type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { registerSubmit } from \"~/utilities/register\";\nimport { ApiError } from \"@supabase/supabase-js\";\nimport { authenticator } from \"~/services/auth.server\";\n\n//Action: Form submission.\n//Get formData from request and pass form object to registerSubmit function, return result of registerSubmit\nexport const action: ActionFunction = async ({ request }) => {\n  let form: Object = await request.clone().formData();\n  let user: string | ApiError | undefined = await registerSubmit({ form });\n\n  if (user) {\n    return authenticator.authenticate(\"sb\", request, {\n      successRedirect: `register/${user}`,\n      failureRedirect: \"/\",\n    });\n  } else return redirect(\"/\");\n};\n\n//Loader:\n\ntype Props = {};\n\nfunction Index({}: Props) {\n  return (\n    <div className=\"card w-96 bg-neutral \">\n      <div className=\"card-body flex-col justify-stretch content-around space-y-3 \">\n        <h2 className=\"card-title\">Register.</h2>\n        <Form method=\"post\" name=\"RegisterForm\">\n          <div className=\"form-control\">\n            <label className=\"input-group\">\n              <span>Email</span>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"email@domain.com\"\n                className=\"input input-bordered\"\n              />\n            </label>\n          </div>\n\n          <div className=\"form-control \">\n            <label className=\"input-group \">\n              <span>Password</span>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                className=\"input input-bordered\"\n              />\n            </label>\n          </div>\n          <div className=\"form-control\">\n            <label className=\"input-group \">\n              <span>Password</span>\n              <input\n                type=\"password\"\n                name=\"password2\"\n                placeholder=\"confirm password\"\n                className=\"input input-bordered\"\n              />\n            </label>\n            <label className=\"label\">\n              <span className=\"label-text  \">Confirm Password</span>\n            </label>\n          </div>\n\n          <div className=\"card-actions justify-around py-5\">\n            <button className=\"btn btn-primary \">Register</button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n", "import { supabaseStrategy } from \"~/services/auth.server\";\nimport { dbClient } from \"~/services/dbClient\";\nimport { AuthorizationError } from \"remix-auth\";\nexport const registerSubmit = async ({ form }) => {\n  //variables for form input data\n  let email = await form.get(\"email\");\n  let password1: any = await form.get(\"password\");\n  let password2 = await form.get(\"password2\");\n\n  //validate password inputs, if match: execute signUp and return user and session if there is no error\n  if (password1 !== password2) {\n    throw AuthorizationError;\n  } else {\n    const { user, session, error } = await dbClient.auth.signUp({\n      email: `${email}`,\n      password: `${password1}`,\n    });\n    if (error) return error;\n\n    return user?.id;\n  }\n};\n", "import { LoaderFunction } from '@remix-run/node'\nimport React from 'react'\nimport { authenticator } from '~/services/auth.server'\n\ntype Props = {}\nexport const loader: LoaderFunction = async ({request}) => {\n    console.log(\"logging out\")\nreturn authenticator.logout(request, {redirectTo: ('/')})\n}\n\nfunction Logout({}: Props) {\n  return (\n    <div>logout</div>\n  )\n}\n\nexport default Logout", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { supabaseStrategy } from \"~/services/auth.server\";\n//This will be the landing page, with a check for auth to reroute to dashboard on !auth .\n\n/* export const loader: LoaderFunction = async ({request}) => {\n  const session = await supabaseStrategy.checkSession(request);\n  if (!session) {\n    console.log(\"TODO: Handle this error\");\n  } else return console.log(session);\n\n} */\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n\n      <p className=\"text-4xl text-secondary\"> This is index route</p>\n      <div className=\"text-2xl text-base glass\">\n       homepage\n      </div>\n      <Link to=\"login\">\n        <button className=\"btn btn-primary\">Click me for login</button>\n      </Link>\n\n\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { Form, Link } from \"@remix-run/react\";\nimport type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\nimport { authenticator, supabaseStrategy } from \"~/services/auth.server\";\n\n//TODO: Validation and Error Handling\n//TODO: ^^ Optimistic UI.\n//TODO: Login should not have props, do not use FC typing so we can avoid introducing typed children. Determine best practice and refactor.\n\n//Loader: Check session on page load, if session exists: redirect to dashboard, where dashboard loader will check session.\nexport const loader: LoaderFunction = async ({ request }) =>\n  supabaseStrategy.checkSession(request, {\n    successRedirect: \"/dashboard\",\n  });\n\n//Action: Call authenticate method of authenticator instatiated in auth.server, which will call supabase client signIn function. Success: nav to user's dashboard, failure: reload login page.\nexport const action: ActionFunction = async ({ request }) =>\n  authenticator.authenticate(\"sb\", request, {\n    successRedirect: \"/dashboard\",\n    failureRedirect: \"/login\",\n  });\n\n/* export const action: ActionFunction = async ({ request }) => {\n  let authUser: any | null = await authenticator.authenticate(\"sb\", request);\n  if (authUser && typeof authUser === \"object\") {\n    console.log(authUser.user.id);\n    let username = await getUsername(authUser.user.id)\n    //TODO: handle case where user abandoned \"user creation\" after registering, where id exists but username and bio do not.\n    return redirect(`/dashboard/${username}`);\n  }\n  if (!authUser) {\n    console.log(\"Failed to authenticate\");\n    return redirect(\"/login\");\n  }\n}; */\n\nfunction Login() {\n  return (\n    <div className=\"card w-96 bg-neutral text-neutral-content my-10\">\n      <div className=\"card-body items-center text-center\">\n        <h2 className=\"card-title\">Sign in to your account.</h2>\n        <Form method=\"post\">\n          <div className=\"form-control \">\n            <label className=\"label\">\n              <span className=\"label-text\">Email</span>\n            </label>\n            <label className=\"input-group min-w-full\">\n              <span>Email</span>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"email@domain.com\"\n                className=\"input input-bordered\"\n              />\n            </label>\n          </div>\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text\">Password</span>\n            </label>\n            <label className=\"input-group\">\n              <span>Password</span>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                className=\"input input-bordered\"\n              />\n            </label>\n          </div>\n          <div className=\"card-actions justify-around py-5\">\n            <button type=\"submit\" className=\"btn btn-primary \">\n              LogIn\n            </button>\n          </div>\n        </Form>\n\n        <Link to=\"/register\">\n          <button className=\"btn btn-ghost\">Register</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n", "export default {'version':'7b0a8fca','entry':{'module':'/build/entry.client-TSURHCLF.js','imports':['/build/_shared/chunk-4YP3AH3J.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-62BUPYAJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/$user/index':{'id':'routes/dashboard/$user/index','parentId':'root','path':'dashboard/:user','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/$user/index-MXQXZQNO.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'root','path':'dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-UMK5M2BQ.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-663H2ZIL.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-LO5IJDAY.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-BB3OPY6S.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/register/$id/index':{'id':'routes/register/$id/index','parentId':'root','path':'register/:id','index':true,'caseSensitive':undefined,'module':'/build/routes/register/$id/index-QY7XJXKX.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/register/index':{'id':'routes/register/index','parentId':'root','path':'register','index':true,'caseSensitive':undefined,'module':'/build/routes/register/index-BNWYYJD5.js','imports':['/build/_shared/chunk-VURS4OIO.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-7B0A8FCA.js'};", "\nimport * as entryServer from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/entry.server.tsx\";\nimport * as route0 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/root.tsx\";\nimport * as route1 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/dashboard/$user/index.tsx\";\nimport * as route2 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/register/$id/index.tsx\";\nimport * as route3 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/dashboard/index.tsx\";\nimport * as route4 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/register/index.tsx\";\nimport * as route5 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/logout.tsx\";\nimport * as route6 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/index.tsx\";\nimport * as route7 from \"/Users/jordanwalsh/personalprojects/lv8r-2/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard/$user/index\": {\n      id: \"routes/dashboard/$user/index\",\n      parentId: \"root\",\n      path: \"dashboard/:user\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/register/$id/index\": {\n      id: \"routes/register/$id/index\",\n      parentId: \"root\",\n      path: \"register/:id\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/register/index\": {\n      id: \"routes/register/index\",\n      parentId: \"root\",\n      path: \"register\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": []
}
